class Solution {
    int dp[][] = new int[30001][2];
    public int solve(int nums[],int idx,int buy){
        if(idx >= nums.length)
            return 0;
        
        if(dp[idx][buy]!=-1)
            return dp[idx][buy];

        int ans = 0;
        
        if(buy == 0){
            int op1 = -nums[idx] + solve(nums,idx+1,1);
            int op2 = solve(nums,idx+1,0);
            ans = Math.max(op1,op2);
        }
        else{
            int op1 = nums[idx] + solve(nums,idx+1,0);
            int op2 = solve(nums,idx+1,1);
            ans = Math.max(op1,op2);
        }

        return dp[idx][buy] = ans;
    }
    public int maxProfit(int[] nums) {
        int n = nums.length;

        for(int a[]:dp)
            Arrays.fill(a,-1);

        int ans = solve(nums,0,0);
        return ans;
    }
}
